컬렉션 프레임워크란 ?
자바에서 컬렉션 프레임워크란 다수의 데이터를 쉽고 효과적으로 처리할 수 있는 표준화된 방법을 제공하는 클래스의 집합을 의미
즉,데이터를 저장하는 자료 구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 구현해 놓은 것 

이러한 컬렉션프레임워크는 자바의 인터페이스를 사용하여 구현됨 

컬렉션 프레임워크 주요 인터페이스 
컬렉션 프레임워크에서는 데이터를 저장하는 자료 구조에 따라 다음과 같은 핵심이 되는 주요 인터페이스를 정의하고 있다.

1.List 인터페이스 
2.Set 인터페이스
3.Map 인터페이스

이 중에서 List와 Set 인터페이스는 모두 Collection 인터페이스를 상속받지만, 구조상의 차이로 인해 Map 인터페이스는 별도로 정의됨
따라서 List 인터페이스와 Set 인터페이스의 공통된 부분을 Collection 인터페이스에서 정의하고 있다.

주요 인터페이스의 간략한 특징 
자바에서 컬렉션 프레임워크를 구성하고 있는 주요 인터페이스의 간략한 특징은 다음과 같다

List<E> 순서가 있는 데이터의 집합으로, 데이터의 중복을 허용함 
Set<E> 순서가 없는 데이터의 집합으로, 데이터의 중복을 허용하지 않음
Map<K,V> 키와 값의 한 쌍으로 이루어지는 데이터의 집합으로,순서가 없음
         이때 키는 중복을 허용하지 않지만, 값은 중복될 수 있음 
         
다음은 ArrayList 클래스를 이용하여 리스트를 생성하고자 조작하는 예제

List 컬렉션 클래스 
List 인터페이스를 구현한 모든 List 컬렉션 클래스는 다음과 같은 특징을 가짐

1. 요소의 저장 순서가 유지됨
2. 같은 요소의 중복 저장을 허용함

대표적인 List 컬렉션 클래스에 속하는 클래스는 다음과 같다.

1.ArrrayLsit<E>
2.LinkedList<E>

ArrayList<E>클래스 
ArrayList 클래스는 가장 많이 사용되는 컬렉션 클래스 중 하나 
JDK 1.2부터 제공된 ArrayList 클래스는 내부적으로 배열을 이용하여 요소를 저장함 

ArrayList 클래스는 배열을 이용하기 떄문에 인덱스를 이용해 배열 요소에 빠르게 접근할 수 있다.
but 배열은 크기를 변경할 수 없는 인스턴스이므로,크기를 늘리기 위해서는 새로운 배열을 생성하고 기존의 요소들을 옮겨야 한느 복잡한 과정을 
거쳐야 한다. 
물론 이 과정은 자동으로 수행되지만,요소의 추가 및 삭제 작업에 걸리는 시간이 매우 길어지는 단점을 가지게 됨 

Map 컬렉션 클래스
Map 인터페이스는 Collection 인터페이스와는 다른 저장 방식을 가짐
Map 인터페이스를 구현한 Map 컬렉션 클래스들은 키와 값을 하나의 쌍으로 저장하는 방식 Key-value 방식을 사용 
여기서 키란 실질적인 값을 찾기 위한 이름의 역할 

Map 인터페이스를 구현한 모든 Map 컬렉션 클래스는 다음과 같은 특징을 가짐

1.요소의 저장 순서를 유지하지 않음
2.키는 중복을 허용하지 않지만,값의 중복은 허용함

대표적인 Map 컬렉션 클래스에 속하는 클래스는 다음과 같다.

1.HashMap<K,V>
2.Hashtable<K,V>
3.TreeMap<K,V>

HashMap<K,V>클래스 
HashMap 클래스는 Map 컬렉션 클래스에서 가장 많이 사용되는 클래스 중 하나이다.
JDK1.2부터 제공된 HashMap 클래스는 해시 알고리즘(hash algorithm)을 사용하여 검색속도가 매우 빠름 

HashMap 클래스는 Map 인터페이스를 구현하므로 중복된 키로는 값을 저장할 수 없다.
하지만 같은 값을 다른 키로 저장하는 것은 가능 



















