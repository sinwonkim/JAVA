자바는 클래스를 떠나 존재하는 것은 자바의 함수는 보통 따로 존재x
클래스 내에 존재 자바는 이 클래스 내의 함수를 메소드라고 부름 

자바에서 함수의 명칭은 메소드이다.

입력을 가지고 어떤 일을 수행한 다음에 결과물을 내놓는것 이것이 메소드가 하는 일이다.

메소드를 사용하는 이유~? 

프로그래밍을 하다보면 똑같은 내용을 반복해서 적고 있는 것을 발견함  이 때가 메소드가 필요한 떄이다.
여러번 반복해서 사용된다는 것은 언제고 또다시 사용할 만한 가치가 있는 부분이라는 뜻이다.

이러한 경우 이것을 한 뭉치에 묶어서  어떤 입력값을 주었을 떄 어떤 리턴값을 돌려준다 라는 식의 메소드를 작성하는 것이 현명한 일일 것이다.
public class Test{
public int addMethod(int a, int b) {
  return a+b;
}
}

public static void main(String[] args) {
Test test = new Test();
 int sum = test.addMethod(3,4);
  
System.out.println(sum);
}
result 
7

## 메소드의 구조 

public 리턴자료형 메소드명(입력자료형1 입력변수1, 입력자료형 2 입력변수2){

	return 리턴값; // 리턴 자료형이 void인 경우에는 return 문이 필요 없다.
}

리턴값이 없는 메소드는 명시적으로 리턴타입 부분에 void라고 표기한다. 
리턴값이 없는 메소드는 돌려주는 값이 없기 때문에 

Test  test = new Test();
test.sum(3,4);  // test객체에 sum이라는 메소드가 있음 

즉,리턴값이 없는 메소드는 
객체.메소드명(입력인수1,입력인수2);

return의 또 다른 쓰임새 
특별한 경우에 메소드를 빠져나가기를 원할 때 return만 
단독으로 써서 메소드를 즉시 빠져나갈 수 있다. 

public void getAaway(string apple) {
	if("fool".equals(apple)) { 
		return;
	}
	System.out.println("내 핸드폰은"+apple+" 입니다.");
}
위의 메소드는 입력값으로 apple이란 변수를 받아서 문자열 출력하는 메소드 
이메소드는 입력값으로 'fool'이라는 값이 들어오면 문자열을 출력하지 않고 
메소드를 즉시 빠져나간다. 
이렇게 메소드 수행 시 특정조건에 따라 메소드를 빠져나가고 싶은 경우 
return문을 이용하면 된다. 

public void leageOflegend(String Characters){
	if("vein".equals(Characters)) {
		return;
	}
	System.out.println("내 케릭터는"+Characters+"입니다.") ;
}




