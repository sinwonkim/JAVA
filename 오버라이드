오버라이딩, 슈퍼(super)

상속을 하면 부모의 것을 모두 사용할 수 있는 장점 있음
하지만 자식입장에서는 물려받은것을 다 쓰고 싶지만 
같은 이름으로 메소드를 다시 만들고 싶을때 
오버라이딩(오버라이드)을 하면됨

오버라이드 사용문법은 만들려고 하는 메소드위에 
@Override를 작성해 주면 된다.

오버라이드는 어노테이션의 종류 @로 시작하는 것이 어노테이션

그럼 메소드를 다시 정의하면 부모의 메소드를 못 쓸까?
바로 슈퍼(super)를 붙이면 부모의 객체에 접근 할 수 있다.

ex)

package overridetest;

public class OverrideTest {
	
	public static void main(String[] args) {
		
	B	b= new B();
	b.justOutput(); // 부모클래스 A를 상속받은 B클래스의 객체를 생성해서 부모 클래스의 justOutput 메소드를 호출
	b.test2();
	}
}	
	 class A {
		int i = 0;
		
		public void justOutput() {
			System.out.println("A클래스의 아웃풋 메소드"+"i: "+i);
		}
	}
	
	 class B extends A {
		@Override
		public void justOutput() {
			System.out.println("자식 클래스");
		}
		
		public void test2() {
			super.justOutput(); // 부모 클래스의 메소드를 사용하려고 super 키워드 사용
		}
		
	}

result 
자식 클래스
A클래스의 아웃풋 메소드i: 0











출처 https://bvc12.tistory.com/179?category=551930
