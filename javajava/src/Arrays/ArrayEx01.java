package Arrays;

public class ArrayEx01 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 배열이란 한 개의 데이터만 저장할 수 있다. 따라서 저장해야할 데이터의 수가 많아지면 그만큼 많은 변수가 필요하다.
		// 예를들어 학생 30명의 성적을 저장하고, 평균값을 구한다고 생각하면 학생 30명의 성적을 저장할 변수가 30개가 필요핟. 그리고 그 변수를 다 더해야 하고 그 더한값 넣을 변수가 필요하다. 
		// 각 데이터에 인덱스를 부여해 놓은 자료구조이다.  배열의 각 인덱스는 각 항목의 데이터를 읽거나 저장하는데 사용되며 다음과 같이 배열 이름옆에 대괄호 [] 에 기입된다. 

			// 같은 타입의 많은 양의 데이터를 다루는 프로그램에서는 좀 더 효율적인 방법이 필요한데 이것이 배열이다. 배열은 같은 타입의 데이터를 연속된 공간에 
			// 나열시키고, 각 데이터에 인덱스를 부여해 놓은 자료구조이다. 예를들어 학생들의 성적은 다음과 같이 score 배열로 생성해 놓고 집어 넣음
			// A클래스에 30명의 학생들의 성적중에 가장 높은 학생의 성적은? A클래스에 5명의 성적이 들어있고 제일 높은 성적의 값을 넣는 변수 1개와  비교 
			int[] classA = {30,50,70,90,95};
			int unknownValue = 0;
			int max = 0;
			for(int p = 0 ; p < classA.length; p++) {
				if(max < classA[p]) {max = classA[p];}
				
			}
			System.out.println("최대값은 : " + max +"입니다.");
			// 배열은 같은 타입의 데이터만 저장할 수 있다. int 배열은 int 값만 저장 가능하고, String 배열은 무자열만 저장 가능하다. 배열은 선언과 동시에 저장할 수 있는 데이터 타입이 결정된다.
			// 만약 다른 타입의 값을 저장하려고 하면 타입 불일치(Type mismatch) 컴파일 오류가 발생한다. 배열의 또다른 특징은 한번 생성된 배열은 길이를 늘리거나 줄일 수 없다. 
			// 만약 5개의 값을 저장해야 하는 경우가 발생하면 길이 5의 새로운 배열을 생성하고, 기존 배열 항목을 새 배열로 복사해야 한다.
			int[] classB = new int[5];
			classB[0] = 10;
			classB[1] = 10;
			classB[2] = 10;
			classB[3] = 10;
			classB[4] = 10;
			// 배열 선언
			// 타입[] 변수;  타입 변수[]; 대괄호[]는 배열 변수를 선언하는 기호로 사용하는데, 타입 뒤에 붙을 수도 있고 변수 뒤에 붙을 수도 있다. 타입은 
			// 배열 변수는 참조 변수에 속한다. 배열도 객체이므로 힙 영역에 생성되고 배열 변수는 힙 영역의 배열 변수는 힙 영역의 배열 객체를 참조하게 된다. 
			// 중괄호 {}는 
			String[] names = null;
			names = new String[] {"ho","ha","kim"};
			System.out.println(names[0]);
			//메소드의 매개값이 배열일 경우에도 마찬가지다 // 매개변수로 int[] 배열이 선언된 add() 메소드가 있을 경우, 값 목록으로 배열을 생성함과 동시에 add() 메소드의 매개값으로 사용하고자 할떄
		
		}
	}

