상속이란 
상속이란 기존의 클래스에 기능을 추가하거나 재정의하여 새로운 클래스를 정의하는 것을 의미
이러한 상속은 캡슐화,추상화와 더불어 객체 지향 프로그래밍을 구성하는 중요한 특징 중 하나이다.

상속을 이용하면 기존에 정의되어 있는 클래스의 모든 필드와 메소드를 물려받아,새로운 클래스를 생성할 수 있다.


문법

class 자식 클래스 이름 extend 부모 클래스 이름 { }

부모 클래스는 자식 클래스에 포함됨 
따라서 부모 클래스에 새로운 필드를 하나 추가하면, 자식 클래스에도 자동으로 해당 필드가 추가가 된 것처럼 동작함

자식 클래스에서는 부모 클래스의 필드와 메소드만이 상속되며, 생성자와 초기화 블록은 상속x
또한,부모클래스의 접근 제어가 private이나 default로 설정된 멤버는 자식 클래스에서 상속받아도 접근할 수 x

메소드 오버라이딩
오버라이딩이란 상속 관계에 있는 부모 클래스에서 이미 정의된 메소드를 자식 클래스에서 같은 시그니쳐를 갖는 메소드로 
다시 정의하는 것이라고 할 수 있다.

자바에서 자식 클래스는 부모 클래스의 private 멤버를 제외한 모든 메소드를 상속받는다.
이렇게 상속받은 메소드는 그대로 사용해도 되고, 필요한 동작을 위해 재정의하여 사용할 수도 있다.
즉, 메소드 오버라이딩이란 상속받은 부모 클래스의 메소드를 재정의하여 사용하는 것을 의미

오버라이딩의 조건 
자바에서 메소들르 오버라이딩하기 위한 조건은 다음과 같다.

1.오버라이딩이란 메소드의 동작만을 재정의하는 것이므로, 메소드의 선언부는 기존 메소드와 완전히 같아야 한다.
 하지만 메소드의 반환타입은 부모 클래스의 반환 타입으로 타입 변환할 수 있는 타입이라면 변경할 수 있다.
2.부모 클래스의 메소드보다 접근 제어자를 더 좁은 범위로 변경할 수 x
3.부모 클래스의 메소드보다 더 큰 범위의 예외를 선언할 수 x
 
 ex)
 class Parent {

    void display() { System.out.println("부모 클래스의 display() 메소드입니다."); }

}

class Child extends Parent {

    void display() { System.out.println("자식 클래스의 display() 메소드입니다."); }

}

 오버로딩과 오버라이딩 비교
 오버로딩은 새로운 메소드를 정의하는 것
 오버라이딩은 상속받은 기존의 메소드를 재정의 하는 것 
 
 
 
 
 
 
 
 
 
 
 
 
 
 이 내용은 tcp 스쿨을 보고 개인적 정리 목적으로 작성할 글 입니다.
 
