추상클래스는 왜 만들며 왜 상속해서 사용할 수 있도록 하는 
것일까?
추상적으로 구체적이지 않다는 이야기..

ex)협업 작업을 할 떄 똑같은 메소드를 다른 이름으로 만들어 놓거나
    변수의 이름을 다르게 만들어 놓으면 찾기가 어렵 
    그럼 클래스를 하나 만들어 놓고 그것만 쓰면 되는게 아닐까?
    만약 메소드의 기능들이 조금씩만 다르면 하나 만들어 놓은 것을 생성하고
조금씩 수정해서 쓸 것이다.
그렇게 조금씩 수정하다보면 정말로 이름이 조금씩 다르게 되고 
찾기가 어려워짐 
그래서 메소드 명칭 변수 명칭 등등을 정해놓고 편리하게 사용할 수 있는
방법이 추상 클래스 

추상클래스 문법은 
abstract class 클래스명 

추상 클래스를 만들고 추상메소드를 만들 수 있다.
추상메소드 문법은
abstract 리턴타입 메소드명(); 이다.
메소드 안에 내용은 작성할 수 없다.
why? 추상이니깐 명칭까지만 만들어 놓는거임 
메소드의 내용들을 상속을 하거나 .. 생성을 할게  무조건!! 오버라이드 해서 재정의 해야함 
ex)

package abstractPackage;

public class abClass {

	public static void  main(String[] args) {
		BB bb = new BB();
		bb.test();
	}
}
	abstract class AA {
		
			public AA() {
				System.out.println("추상클래스는 새성자도 만들 수 있다.");
			}
			
			public abstract void test(); // 추상메소드 
	}
	
	class BB extends AA {

		@Override
		public void test() {
			// TODO Auto-generated method stub
			System.out.println("이런식으로 부모 클래스를 추상클래스를 상속받아 추상 메소드는 재정의해서 사용할것");
		}
		
	}

result 
추상클래스는 새성자도 만들 수 있다.
이런식으로 부모 클래스를 추상클래스를 상속받아 추상 메소드는 재정의해서 사용할것
