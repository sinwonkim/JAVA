생성자 
클래스를 생성할 떄 딱 한번 실행이 되는 메소드 

생성자 왜 쓸까?
결론:
클래스를 생성하면 클래스안에 있는 변수에 값을 넣을때
매번 메소드를 사용해서 넣기가 귀찮아서 

클래스를 생성할 떄 클래스안에 있는 변수의 값도 한번에 주자!

클래스의 생성자를 만들기 위한 규칙 있다.
- 메소드에 반환타입 없음 
- 메소드명이 클래스명과 동일해야 함

생성자가 없을때 

public class java17 {
	public static void main(String[] args) {
	Test1 test= new Test1();
	test.setA(3);
	test.setB(4);
	System.out.println(test.a+test.b)
	}
}

class Test1 {
	int a = 0;
	int b = 0; 
	
	public void setA(int c) {
		a = c 
	}

	public void setB(int d){
		b = d
	}
}

생성자가 없을시에는 예제와 같이 생성을 하고 메소드를
불러 변수에 값을 넣어줘야 함 

생성자가 있을때

public class JavaCon {
	public static void main(String[] args) {
	Test1 test = new Test1(3);
	System.out.println(test.b);
	}
}

class Test1 {
	int a = 0;
	int b = 0;
	
	@생성자 오버로딩 	
	public test1(int c, int d){
		a = c;
		 b = d;
	}
	public Test1(int d)
	b = d;
}

result 
3 
