배열에서 같은 타입의 여러 변수를 하나의 묶음으로 다루는 것 

왜 배열은 필요할까?

ex ) 1,000개의 데이터가 있으면 이걸 언제 변수로 생성함?

만약  리그오브레전드 케릭터에 베인,야스오,바드,나미 등등 
케릭터를 담은 변수를 생성한다 해보자 이거 언제할건가??

String vein ="베인", Yasuo ="야스오과학", nami="나미"; 
이렇게 3개 담는데도 3번 적어야 함..

그리고 변수를 생성하면서 들어가는 메모리 변수를 유지하는 메모리
이런 부분들은??? 
그래서 배열이 존재함 

배열의 선언 및 생성방법 

배열 선언 : 타입[] 변수이름;
	예제: string[] characters;

배열 생성 :new타입[공간];
	예제:new String[7];

선언과 생성을 동시에 해도 상관 없음

String[] characters= new String[7];

여기서 잠깐!! 드는 의문 왜 생성을 하지? 
그 이유는 배열을 생성하면 진짜 배열만 생성되고 데이터를
저장할 수 있는 공간은 없음 

생성자를 생성해야 데이터를 넣을 수 있는 메모리의 공간이
생성되는것임 

그리고 배열에 있어 엄청 중요한것.. 바로 생성자로 생성된
메모리 영역은 0번부터 시작된다는점 index[0] 이라할까나..
우리는 1이겠지만 컴터는 0부터 시작하는 느낌인듯 

String[] characters = new String[7]; <---- 와 같이 데이터 저장공간을 7개만들면

0,1,2,3,4,5,6 이렇게 7개가 생성된다는 것임 

package javaStudy;

public class arrayStudy0 {
	
	public static void main(String[] args) {
		
		String[] lolC = new String[5];
		lolC[0] = "탑: 야스오";
		lolC[1] = "미드: 제드";
		lolC[2] = "원딜: 베인";
		lolC[3] = "서폿: 알리스타";
		lolC[4] = "정글: 녹턴";
		
		//상대팀도 적어줘야징  다른 방식으로 배열을 적어보자
		
		String[] lolC2 = {"탑: 나서스","미드: 갈리오","원딜: 이즈리얼","서폿: 소나","정글: 신짜오"};
		
		System.out.print("블루 팀 - ");
		for(int i = 0; i<lolC.length; i++ ) {
			System.out.print(lolC[i]+" ");
		
		}
		System.out.println();
		System.out.print("레드 팀 - ");
		for(int i = 0; i<lolC.length; i++ ) {
		
			System.out.print(lolC2[i]+" ");
		}
	}
}

근데 이렇게 5번 적는것도 귀찮음   

String[] lolC = {""} 

근데 의외로 for문을 돌릴떄는 1번 방식으로 인덱스 일일이 지정 하는 방식 활용하고 

2번째 타입[] 변수명이름 = {"","",""}; 이 방식은 하드코딩 할떄 쓴다고 한다 음.. 의외다 

리스트는 배열과 비슷함 
만들어진 이유? 배열의 한계떄문에 만들어짐 
배열의 한계는 무엇일까?
배열같은 경우 만들때
ex)자바
1번 방식
String[] asd= new String[5];
asd[0] ="스트링 형태로";

2번 방식
String[] ppt = {"가","나","다"};

List는 메모리가 허용하는 한 계속해서 추가할 수 있다.

List활용 ex)
package List;

import java.util.ArrayList;
import java.util.List;

public class ArrayListEx {

	public static void main(String[] args) {

		 List<String> LeageC = new ArrayList<String>();

		 LeageC.add("탑 스오");
		 LeageC.add("미드 아리");
		 LeageC.add("봇 베인");
		 LeageC.add("서폿 룰루");
		 LeageC.add("정글 짜오");
		 LeageC.set(1, "미드 루시안");//index 1번 아리를 변경 
		 LeageC.remove(2); // index 2번 베인 삭제 
		 
		 for(String data:LeageC) { // 대입받을 변수정의 :배열     Enhanced for
		 			    
			 System.out.println(data); // 콘솔 출력
		 }
		 System.out.println("리스트 출력"+LeageC.toString()); 
	}
}


