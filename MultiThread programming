Java -  Multithread programming 

컴퓨터가 한 번에 1가지 씩 일을 시키는 것보다 여러가지 일을
동시에 시키는 것이 효과적이다.

ex) 네트워킹 프로그래밍을 예로 들면, 통신용 서버 프로그램은 
Client가 보내는 여러개의 메시지를 동시에 처리해야 한다.

이런 경우에 Java 프로그램에서 손오공과 같이 자신의 분신을 만들어서 
실행시키는 방법을 알아보자.

멀티스레드 개념 
Java에 일을 시킬떄에도 동시에 여러가지 일을 처리할 떄에는 분신 프로그램을 만들어서 일을 
시켜야 하는데, 이러한 분신 프로그램을 Java에서는 스레드(Thread)라고 한다.

멀티스레드(Multi-Thread)라는 것은 스레드를 1개 이상 여러 개 만들어서 돌린다는 것이다.

컴퓨터의 CPU자원을 활용해서 각각의 스레드가 동시에 업무를 수행한다고 보면 되겠다.
각각의 스레드는 개별 실행하는 프로그램이지만, 각각의 스레드는 서로 생성한 클래스(인스턴스)를 공유해서 
사용할 수 있다는 점이 별도의 프로그램을 돌리는 것과는 차이가 있다.

각각의 스레드는 개별 실행하는 프로그램이지만, 각각의 스레드는 서로 생성한 클래스(인스턴스)를
공유해서 사용할 수 있다는 점이 별도의 프로그램을 돌리는 것과는 차이가 있다.

Thread클래스를 이용한 멀티스레드 
Java에서 멀티스레드를 만들어서 사용하는 방법은 간단하다.Java에서 제공한 Thread 클래스와 Runnable 인터페이스를 이용하면 된다.

우선 Thread 클래스를 이용하여 멀티스레드를 구현하는 방법
Thread 클래스에 스레드를 만드는 역할을 하는 기능을 java에서 알아서 넣어 두었으므로,우리는 Thread클래스를 이용하면 된다.

이용하는 방법은

1)Thread 클래스를 상속 받아서 내가 시킬 일을 해줄 클래스를 하나 만든다.
2)위에서 만든 클래스에 run()메소드 안에 시킬 일을 정의해 준다.
3)메인스레드에서 위에서 만든 클래스의 start()메소드를 호출한다.

start()메소드 안에는 thread를 생성시켜서 일을 시키기 위한 여러가지 준비작업을 
수행한 뒤에 준비가 끝나면 최종적으로 run()메소드를 호출해서 스레드가 자신의 일을 
처리해나가게 된다.

주의할점은 run()메소드를 바로 호출하면 안되고, start() 메소드를 호출해야한다는 점
why?? run()메소드를 바로 호출하게 되면 thread를 만들어서 실행하기 위한 처리가 안되고 
그냥 run()메소드안에 정의된 일을 main스레드에서 처리해 버리기 떄문. 별도의 스레드를
만들어서 수행해야 하므로,반드시 start()메소드를 호출해서 일을 시키도록 한다.

메인스레드에서 1~10까지 덧셈을 수행하고, 분신으로 만들어진 Thread클래스에서는 
1~10까지 합계를 구하는 프로그램을 만듬 
