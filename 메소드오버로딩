한 클래스 내에 동일한 이름의 메소드를 둘 이상 정의하는 것은 허용되지 않음 
But  그러나 매개변수의 선언이 다르면 가능 이것을 메소드 오버로딩이라 함!! 

메소드 오버로딩의 조건 
- 메소드의 이름 
- 메소드의 매개변수 정보 

메소드의 이름이 같아도 매개변수 선언이 다르면 메소드 호출문의 전달인자를 통해서 호출된 메소드를 구분할 수 있다.
떄문에 매개변수의 선언이 다르면 동일한 이름의 메소드 정의를 허용하는데 이름 '메소드 오버로딩'이라고 한다.


ex)

package methodOverloadingEx;


/*
 *  한 클래스 내에 동일한 이름의 메소드를 둘 이상 정의하는 것을 허용되지 않는다 그러나 매개변수의 선언이 다르면 가능하다. 
 *  이것을 메소드 오버로딩이라 한다.
 * 
 */
public class OverLoadingEx1 {
	public static void main(String[] args) {
		
	}
	
	public void atom(int a) {
		
	}
	
	public void atom() {
		
	}
	
	public void atom(int b,String a) {
		
	}

}

결론 :
메소드의 이름이 같아도 매개변수 선언이 다르면 메소드 호출문의 전달인자를 통해서 호출된 메소드를 구분할 수 있다.
떄문에 매개변수의 선언이 다르면 동일한 이름의 메소드 정의를 허용하는데, 이를 가리켜 '메소드 오버로딩'이라 한다.

메소드 오버로딩 조건 성립 하려면
- 매개변수 선언이 다르거나 구체적으로 말하면 매개변수의 수 또는 형(type)이 달라야 한다. 

int simple(){
}

String simple() {

}
이런건 안된다. Why ? 반환형은 호출할 메소드를 선택하는데 있어서의 판단 기준이 아니기 떄문

----------------------------------------------------------------------------------------------
생성자도 오버로딩의 대상이 된다.......... ex)

public class OverLoadingEx1 {
	
	private int number;
	
	OverLoadingEx1() { // 생성자도 오버로딩의 대상이 된다.
		
	}
	OverLoadingEx1(int a) {
		
	}
}
